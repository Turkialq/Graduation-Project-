// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Student {
  id                  Int                @id @default(autoincrement())
  firstName           String
  lastName            String
  fatherName          String
  email               String
  password            String
  gender              String
  major               String
  phoneNumber         String
  gpa                 String
  interest            String
  supervisor          StudentSupervisor  @relation(fields: [studentSupervisor], references: [id])
  studentSupervisor   Int
  companySupervisor   CompanySupervisor? @relation(fields: [companySupervisorId], references: [id])
  companySupervisorId Int?
  admin               UniversityAdmin    @relation(fields: [universityAdminId], references: [id])
  universityAdminId   Int
  company             Company?           @relation(fields: [companyId], references: [id])
  companyId           Int?
  university          University         @relation(fields: [universityId], references: [id])
  universityId        Int
  submitions          Submissions?

  weeklyStatus   WeeklyStatus? @relation(fields: [weeklyStatusId], references: [id])
  weeklyStatusId Int?          @unique
}

model StudentSupervisor {
  id              Int             @id @default(autoincrement())
  name            String
  lastName        String
  email           String
  password        String
  phoneNumber     String
  gender          String
  major           String
  admin           UniversityAdmin @relation(fields: [universityAdmin], references: [id])
  universityAdmin Int
  weeklyStatus    WeeklyStatus?   @relation(fields: [weeklyStatusId], references: [id])
  weeklyStatusId  Int?            @unique
  Student         Student[]
}

model CompanySupervisor {
  id          Int       @id @default(autoincrement())
  name        String
  lastName    String
  email       String
  phoneNumber String
  password    String
  gender      String
  major       String
  company     Company   @relation(fields: [companyId], references: [id])
  companyId   Int
  Student     Student[]
}

model UniversityAdmin {
  id                Int                 @id @default(autoincrement())
  name              String
  email             String
  password          String
  gender            String
  univeristy        University          @relation(fields: [universityId], references: [id])
  universityId      Int
  StudentSupervisor StudentSupervisor[]
  Student           Student[]
}

model Company {
  id                Int                 @id @default(autoincrement())
  name              String              @unique
  type              String
  field             String
  location          String
  CompanySupervisor CompanySupervisor[]
  Student           Student[]
  sumbmitions       Submissions?
}

model University {
  id              Int               @id @default(autoincrement())
  name            String            @unique
  UniversityAdmin UniversityAdmin[]
  Student         Student[]
}

model Submissions {
  id               Int      @id @default(autoincrement())
  status           String
  timeOfSubmission DateTime @default(now())
  student          Student  @relation(fields: [studentID], references: [id])
  studentID        Int      @unique
  company          Company  @relation(fields: [companyID], references: [id])
  companyID        Int      @unique
}

model WeeklyStatus {
  id                Int                @id @default(autoincrement())
  filePath          String
  grande            Int
  Student           Student?
  StudentSupervisor StudentSupervisor?
}

model UsedTokens {
  id    String @id @default(uuid())
  Token String
}
